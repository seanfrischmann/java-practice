CSE116 Homework #4 Practice

***************************************************************************
You may work as much as you want during the week, with whatever source of
assistance you like.

You will be required to write up a solution to a SIMILAR problem in recitation
next week, starting with an EMPTY WORKSPACE.  In other words, you must
understand the solution well enough that you can write the solution code
without any external assistance.  You will not be permitted to consult any
notes while you write up your solution in recitation next week.
***************************************************************************

GENERAL INSTRUCTIONS:
--------------------
Your task is to define a class with one method, described below.

Your class must be defined in a named package placed in the 'src' folder.
You may NOT name the package 'tests' or 'util', but aside from that any
valid Java package name is acceptable.

You may choose any valid Java class name for your class.

You may choose any valid Java method names for your methods.  Your methods may
be either static or non-static, but if non-static your class must provide a 
no-argument constructor (either the default constructor, or an explicit one).

The functionality of your definitions will be verified by JUnit tests.
IMPORTANT: note that if the methods are simply stubbed out (just return true or
false) then the all the tests for that method will fail.  You must provide a
non-stub implementation in order for the tests to have a chance of passing.

HOMEWORK-SPECIFIC INSTRUCTIONS:
------------------------------

A description of the required (public) method:

/**************************************************************************
 * @param a String denoting the inputPath the path on the local filesystem
 *        to the input file
 * @returns a HashMap<String,Integer> containing the word->count mappings
 *
 * This method must read the contents of a file (identified by inputFilePath),
 * one char at a time, find the authors in the file, and keep track of author
 * counts in a java.util.HashMap<String,Integer>. 
 * 
 * An author is defined as a contiguous sequence of characters that appear
 * between the <AU> and </AU> tags.
 *
 * LIKE EARLIER HOMEWORKS - you are processing character data one char at a time.
 * LIKE HW3 you are reading the character data from a file, using the 
 * CharacterFromFileReader class.
 *
 * UNLIKE EARLIER HOMEWORKS - the <AU> and </AU> tags  must be recognized as
 * matched sets.  A goal of this homework is to have you learn a general way
 * of solving these kinds state-based problems.  To this end your TA will
 * explain how to draw out a state-transition diagram to recognize these tags
 * and the text between them, and will also explain a technique for implementing
 * a state-transition diagram as code.  You MUST use this approach for solving
 * this problem, since learning this technique is part of the goal of this 
 * homework.
 *
 * You must also be prepared to draw a suitable state-transition diagram for
 * the write-up next week.
 *   
 * You must use only CharacterFromFileReader to read characters from the input
 * file.
 * 
 * This technique is used widely in computer science.  Compilers use state
 * machines to tokenize input files.  Because the state machines are large
 * they are generally automatically generated from regular expression
 * descriptions.  Our state machine is small enough that we will code it
 * by hand.
 *
 **************************************************************************/
